Command : javap -c -v ClassName
------------------------------------------------------------------------------------------------------------------------
Tool :

========================================================================================================================
Classfile /Users/wudj/Workspace/avizii/glint/glint-jvm/target/classes/com/avizii/glint/_1/MovingAverage.class
  Last modified 2021-4-8; size 622 bytes
  MD5 checksum 214b3fdb1dd8135d8a344b8bc19dcb09
  Compiled from "MovingAverage.java"
public class com.avizii.glint._1.MovingAverage
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#25         // java/lang/Object."<init>":()V
   #2 = Fieldref           #4.#26         // com/avizii/glint/_1/MovingAverage.count:I
   #3 = Fieldref           #4.#27         // com/avizii/glint/_1/MovingAverage.sum:D
   #4 = Class              #28            // com/avizii/glint/_1/MovingAverage
   #5 = Class              #29            // java/lang/Object
   #6 = Utf8               count
   #7 = Utf8               I
   #8 = Utf8               sum
   #9 = Utf8               D
  #10 = Utf8               <init>
  #11 = Utf8               ()V
  #12 = Utf8               Code
  #13 = Utf8               LineNumberTable
  #14 = Utf8               LocalVariableTable
  #15 = Utf8               this
  #16 = Utf8               Lcom/avizii/glint/_1/MovingAverage;
  #17 = Utf8               submit
  #18 = Utf8               (D)V
  #19 = Utf8               value
  #20 = Utf8               getAvg
  #21 = Utf8               ()D
  #22 = Utf8               StackMapTable
  #23 = Utf8               SourceFile
  #24 = Utf8               MovingAverage.java
  #25 = NameAndType        #10:#11        // "<init>":()V
  #26 = NameAndType        #6:#7          // count:I
  #27 = NameAndType        #8:#9          // sum:D
  #28 = Utf8               com/avizii/glint/_1/MovingAverage
  #29 = Utf8               java/lang/Object
{
  public com.avizii.glint._1.MovingAverage();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #2                  // Field count:I
         9: aload_0
        10: dconst_0
        11: putfield      #3                  // Field sum:D
        14: return
      LineNumberTable:
        line 7: 0
        line 9: 4
        line 10: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/avizii/glint/_1/MovingAverage;

  public void submit(double);
    descriptor: (D)V
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: dup
         2: getfield      #2                  // Field count:I
         5: iconst_1
         6: iadd
         7: putfield      #2                  // Field count:I
        10: aload_0
        11: dup
        12: getfield      #3                  // Field sum:D
        15: dload_1
        16: dadd
        17: putfield      #3                  // Field sum:D
        20: return
      LineNumberTable:
        line 13: 0
        line 14: 10
        line 15: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcom/avizii/glint/_1/MovingAverage;
            0      21     1 value   D

  public double getAvg();
    descriptor: ()D
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field count:I
         4: ifne          12
         7: aload_0
         8: getfield      #3                  // Field sum:D
        11: dreturn
        12: aload_0
        13: getfield      #3                  // Field sum:D
        16: aload_0
        17: getfield      #2                  // Field count:I
        20: i2d
        21: ddiv
        22: dreturn
      LineNumberTable:
        line 18: 0
        line 19: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/avizii/glint/_1/MovingAverage;
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
}
SourceFile: "MovingAverage.java"
========================================================================================================================
Classfile /Users/wudj/Workspace/avizii/glint/glint-jvm/target/classes/com/avizii/glint/_1/ByteCodeAnalysis.class
  Last modified 2021-4-8; size 1138 bytes
  MD5 checksum 595346d049129a2d60e07651a3ccc49d
  Compiled from "ByteCodeAnalysis.java"
public class com.avizii.glint._1.ByteCodeAnalysis
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #10.#40        // java/lang/Object."<init>":()V
   #2 = Class              #41            // com/avizii/glint/_1/MovingAverage
   #3 = Methodref          #2.#40         // com/avizii/glint/_1/MovingAverage."<init>":()V
   #4 = Methodref          #2.#42         // com/avizii/glint/_1/MovingAverage.submit:(D)V
   #5 = Methodref          #2.#43         // com/avizii/glint/_1/MovingAverage.getAvg:()D
   #6 = Fieldref           #44.#45        // java/lang/System.out:Ljava/io/PrintStream;
   #7 = Methodref          #46.#47        // java/io/PrintStream.println:(D)V
   #8 = Methodref          #46.#48        // java/io/PrintStream.println:(I)V
   #9 = Class              #49            // com/avizii/glint/_1/ByteCodeAnalysis
  #10 = Class              #50            // java/lang/Object
  #11 = Utf8               <init>
  #12 = Utf8               ()V
  #13 = Utf8               Code
  #14 = Utf8               LineNumberTable
  #15 = Utf8               LocalVariableTable
  #16 = Utf8               this
  #17 = Utf8               Lcom/avizii/glint/_1/ByteCodeAnalysis;
  #18 = Utf8               main
  #19 = Utf8               ([Ljava/lang/String;)V
  #20 = Utf8               num
  #21 = Utf8               I
  #22 = Utf8               i
  #23 = Utf8               args
  #24 = Utf8               [Ljava/lang/String;
  #25 = Utf8               average1
  #26 = Utf8               Lcom/avizii/glint/_1/MovingAverage;
  #27 = Utf8               num1
  #28 = Utf8               num2
  #29 = Utf8               avg
  #30 = Utf8               D
  #31 = Utf8               nums
  #32 = Utf8               [I
  #33 = Utf8               average2
  #34 = Utf8               StackMapTable
  #35 = Class              #24            // "[Ljava/lang/String;"
  #36 = Class              #41            // com/avizii/glint/_1/MovingAverage
  #37 = Class              #32            // "[I"
  #38 = Utf8               SourceFile
  #39 = Utf8               ByteCodeAnalysis.java
  #40 = NameAndType        #11:#12        // "<init>":()V
  #41 = Utf8               com/avizii/glint/_1/MovingAverage
  #42 = NameAndType        #51:#52        // submit:(D)V
  #43 = NameAndType        #53:#54        // getAvg:()D
  #44 = Class              #55            // java/lang/System
  #45 = NameAndType        #56:#57        // out:Ljava/io/PrintStream;
  #46 = Class              #58            // java/io/PrintStream
  #47 = NameAndType        #59:#52        // println:(D)V
  #48 = NameAndType        #59:#60        // println:(I)V
  #49 = Utf8               com/avizii/glint/_1/ByteCodeAnalysis
  #50 = Utf8               java/lang/Object
  #51 = Utf8               submit
  #52 = Utf8               (D)V
  #53 = Utf8               getAvg
  #54 = Utf8               ()D
  #55 = Utf8               java/lang/System
  #56 = Utf8               out
  #57 = Utf8               Ljava/io/PrintStream;
  #58 = Utf8               java/io/PrintStream
  #59 = Utf8               println
  #60 = Utf8               (I)V
{
  public com.avizii.glint._1.ByteCodeAnalysis();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/avizii/glint/_1/ByteCodeAnalysis;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=12, args_size=1
         0: new           #2                  // class com/avizii/glint/_1/MovingAverage
         3: dup
         4: invokespecial #3                  // Method com/avizii/glint/_1/MovingAverage."<init>":()V
         7: astore_1
         8: iconst_1
         9: istore_2
        10: iconst_2
        11: istore_3
        12: aload_1
        13: iload_2
        14: i2d
        15: invokevirtual #4                  // Method com/avizii/glint/_1/MovingAverage.submit:(D)V
        18: aload_1
        19: iload_3
        20: i2d
        21: invokevirtual #4                  // Method com/avizii/glint/_1/MovingAverage.submit:(D)V
        24: aload_1
        25: invokevirtual #5                  // Method com/avizii/glint/_1/MovingAverage.getAvg:()D
        28: dstore        4
        30: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
        33: dload         4
        35: invokevirtual #7                  // Method java/io/PrintStream.println:(D)V
        38: bipush        6
        40: newarray       int
        42: dup
        43: iconst_0
        44: iconst_1
        45: iastore
        46: dup
        47: iconst_1
        48: bipush        6
        50: iastore
        51: dup
        52: iconst_2
        53: bipush        8
        55: iastore
        56: dup
        57: iconst_3
        58: bipush        7
        60: iastore
        61: dup
        62: iconst_4
        63: iconst_3
        64: iastore
        65: dup
        66: iconst_5
        67: iconst_4
        68: iastore
        69: astore        6
        71: new           #2                  // class com/avizii/glint/_1/MovingAverage
        74: dup
        75: invokespecial #3                  // Method com/avizii/glint/_1/MovingAverage."<init>":()V
        78: astore        7
        80: aload         6
        82: astore        8
        84: aload         8
        86: arraylength
        87: istore        9
        89: iconst_0
        90: istore        10
        92: iload         10
        94: iload         9
        96: if_icmpge     127
        99: aload         8
       101: iload         10
       103: iaload
       104: istore        11
       106: iload         11
       108: iconst_2
       109: irem
       110: ifne          121
       113: aload         7
       115: iload         11
       117: i2d
       118: invokevirtual #4                  // Method com/avizii/glint/_1/MovingAverage.submit:(D)V
       121: iinc          10, 1
       124: goto          92
       127: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       130: aload         7
       132: invokevirtual #5                  // Method com/avizii/glint/_1/MovingAverage.getAvg:()D
       135: invokevirtual #7                  // Method java/io/PrintStream.println:(D)V
       138: iconst_0
       139: istore        8
       141: iload         8
       143: aload         6
       145: arraylength
       146: if_icmpge     163
       149: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       152: iload         8
       154: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
       157: iinc          8, 1
       160: goto          141
       163: return
      LineNumberTable:
        line 10: 0
        line 11: 8
        line 12: 12
        line 13: 18
        line 15: 24
        line 16: 30
        line 18: 38
        line 19: 71
        line 20: 80
        line 21: 106
        line 22: 113
        line 20: 121
        line 25: 127
        line 26: 138
        line 27: 149
        line 26: 157
        line 29: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          106      15    11   num   I
          141      22     8     i   I
            0     164     0  args   [Ljava/lang/String;
            8     156     1 average1   Lcom/avizii/glint/_1/MovingAverage;
           10     154     2  num1   I
           12     152     3  num2   I
           30     134     4   avg   D
           71      93     6  nums   [I
           80      84     7 average2   Lcom/avizii/glint/_1/MovingAverage;
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 92
          locals = [ class "[Ljava/lang/String;", class com/avizii/glint/_1/MovingAverage, int, int, double, class "[I", class com/avizii/glint/_1/MovingAverage, class "[I", int, int ]
          stack = []
        frame_type = 28 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 21
}
SourceFile: "ByteCodeAnalysis.java"